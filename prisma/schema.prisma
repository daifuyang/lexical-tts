// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// 后台管理员
model umsAdmin {
  id        Int     @id @default(autoincrement())
  username  String  @db.VarChar(64)
  password  String  @db.VarChar(64)
  icon      String? @db.VarChar(500) // 头像
  email     String? @db.VarChar(100) // 邮箱
  nickname  String? @db.VarChar(200)
  note      String? @db.VarChar(500)
  createdAt Int     @map("created_at")
  loginAt   Int     @map("login_at")
  status    Int     @default(1) @db.TinyInt

  @@map("ums_admin")
}

// 前台用户表
model umsMember {
  id                    Int       @id @default(autoincrement())
  username              String    @db.VarChar(64)
  realname              String?   @db.VarChar(50)
  password              String    @db.VarChar(64)
  salt                  String    @db.VarChar(64)
  nickname              String?   @db.VarChar(64)
  phone                 String?   @db.VarChar(64)
  status                Int       @default(1) @db.TinyInt
  createdAt             Int       @map("created_at")
  icon                  String?   @db.VarChar(500)
  gender                Int       @default(1) @db.TinyInt
  birthday              DateTime? @db.Date
  city                  String?   @db.VarChar(64)
  job                   String?   @db.VarChar(100)
  personalizedSignature String?   @map("personalized_signature") @db.VarChar(200)
  sourceType            Int?      @map("source_type") @db.Int

  @@unique([username], name: "idx_username")
  @@unique([phone], name: "idx_phone")
  @@map("ums_member")
}

// 定义用户关联token表
model umsToken {
  id           Int    @id @default(autoincrement())
  userId       Int
  userType     Int?   @db.TinyInt
  accessToken  String @db.VarChar(255)
  refreshToken String @db.VarChar(255)
  expiry       Int
  createdAt    Int    @map("created_at")

  @@map("ums_token")
}

// tts项目相关
model ttsProject {
  id        Int    @id @default(autoincrement())
  memberId  Int    @map("member_id") // 创建人id 
  title     String @db.VarChar(100) // 标题
  content   String @db.Text
  createdAt Int    @map("created_at")

  @@map("tts_project")
}

// tts主播
model ttsVoice {
  id              Int    @id @default(autoincrement())
  name            String @db.VarChar(100) // 名称
  gender          Int    @db.TinyInt
  locale          String @db.VarChar(20)
  shortName       String @unique @db.VarChar(255)
  sampleRateHertz Int?   @map("sample_rate_hertz") @db.Int
  voiceType       String @db.VarChar(20)
  status          Int    @default(1) @db.TinyInt
  wordsPerMinute  Int?   @map("words_per_minute") @db.Int

  @@map("tts_voice")
}

// 主播风格
model ttsVoiceStyle {
  id     Int    @id @default(autoincrement())
  style  String @unique @db.VarChar(150)
  name   String @db.VarChar(100)
  desc   String @db.VarChar(255)
  status Int    @default(1) @db.TinyInt

  @@map("tts_voice_style")
}

model ttsVoiceStyleRelation {
  id      Int    @id @default(autoincrement())
  voiceId Int
  style   String

  @@map("tts_voice_style_relation")
}

// 主播分类
model ttsVoiceCategory {
  id         Int    @id @default(autoincrement())
  name       String @db.VarChar(100)
  desc       String @db.VarChar(255)
  sort_order Int?   @map("sort_order") @db.Int
  status     Int    @default(1) @db.TinyInt

  @@map("tts_voice_category")
}

// 配音作品表
model TtsWork {
  id          Int      @id @default(autoincrement())
  title       String
  speaker     String
  duration    Float
  editorState String
  ssml        String
  creatorId   String
  status      Int      @default(1) @db.TinyInt
  createdAt   DateTime @default(now())
}

// 配音试听表
model TtsSample {
  id        Int      @id @default(autoincrement())
  workId    Int
  content   String // 试听内容
  audioUrl  String
  creatorId String
  createdAt DateTime @default(now())
}

// 用户角色
model umsMemberRole {
  id        Int @id @default(autoincrement())
  memberId  Int
  roleId    Int
  createdAt Int @map("created_at")
  updatedAt Int @map("updated_at")

  @@map("ums_member_role")
}

model sysDictType {
  id        Int     @id @default(autoincrement())
  name      String  @db.VarChar(50)
  type      String  @unique @db.VarChar(50)
  status    Int     @default(1) @db.TinyInt
  remark    String? @db.VarChar(255)
  createdAt Int     @map("created_at")
  createdId Int
  updatedAt Int     @map("updated_at")

  @@map("sys_dict_type")
}

model sysDictData {
  id        Int     @id @default(autoincrement())
  label     String  @db.VarChar(100)
  value     String  @db.VarChar(100)
  type      String  @db.VarChar(50)
  status    Int     @default(1) @db.TinyInt
  sortOrder Int?    @map("sort_order") @db.Int
  remark    String? @db.VarChar(255)
  createdAt Int     @map("created_at")
  createdId Int
  updatedAt Int     @map("updated_at")

  @@map("sys_dict_data")
}
